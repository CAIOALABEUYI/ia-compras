
import streamlit as st
import random

st.set_page_config(page_title="IA de Compras Pro", page_icon="ğŸ’¼", layout="centered")

# TÃ­tulo
st.markdown("<h1 style='text-align: center; color: #1a3c70;'>ğŸ¤– IA de Compras Pro</h1>", unsafe_allow_html=True)
st.markdown("<p style='text-align: center; color: gray;'>Baseada no livro Procurement Book (versÃ£o simulada)</p>", unsafe_allow_html=True)
st.markdown("---")

# Entrada do usuÃ¡rio
user_input = st.text_input("Digite sua pergunta sobre negociaÃ§Ã£o, ferramentas ou melhores prÃ¡ticas:")

# Base simulada
knowledge_base = {
    "negociaÃ§Ã£o": [
        "Para negociaÃ§Ãµes estratÃ©gicas, Ã© importante utilizar uma abordagem colaborativa e focada em valor de longo prazo.",
        "Considere tÃ©cnicas como BATNA (Best Alternative to a Negotiated Agreement) para fortalecer sua posiÃ§Ã£o.",
        "Mapeie o perfil do fornecedor e use a Matriz de Kraljic para classificar a criticidade do item antes de negociar.",
    ],
    "ferramentas": [
        "Use RFI (Request for Information) quando precisar entender melhor as opÃ§Ãµes do mercado.",
        "RFQ (Request for Quotation) Ã© ideal para produtos padronizados onde o preÃ§o Ã© o fator decisivo.",
        "O TCO (Total Cost of Ownership) permite avaliar o custo total alÃ©m do preÃ§o inicial: inclui manutenÃ§Ã£o, transporte, impostos etc.",
        "SRM (Supplier Relationship Management) Ã© Ãºtil para gerenciar fornecedores estratÃ©gicos com foco em colaboraÃ§Ã£o.",
    ],
    "melhores prÃ¡ticas": [
        "Padronize processos de compras e documente cada etapa para garantir conformidade.",
        "Utilize dados histÃ³ricos para planejar negociaÃ§Ãµes e prever demandas.",
        "Integre ferramentas de e-Procurement para aumentar a eficiÃªncia e transparÃªncia.",
        "Invista em treinamentos contÃ­nuos para a equipe de compras sobre tÃ©cnicas de sourcing e compliance.",
    ],
}

# GeraÃ§Ã£o da resposta
def generate_response(user_input: str) -> str:
    user_input_lower = user_input.lower()
    for key, responses in knowledge_base.items():
        if key in user_input_lower:
            return random.choice(responses)
    return "Essa Ã© uma Ã³tima pergunta! No momento ainda estou aprendendo mais sobre esse tÃ³pico. Tente reformular ou aguarde a versÃ£o completa com o conteÃºdo do livro."

# ExibiÃ§Ã£o da resposta
if user_input:
    st.markdown("### Resposta da IA:")
    st.success(generate_response(user_input))

# RodapÃ©
st.markdown("---")
st.markdown("<p style='text-align: center; color: #888;'>ğŸ’¼ Desenvolvido com base em melhores prÃ¡ticas de Procurement</p>", unsafe_allow_html=True)
